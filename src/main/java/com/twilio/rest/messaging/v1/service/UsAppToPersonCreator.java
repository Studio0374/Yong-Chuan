/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.rest.messaging.v1.service;

import com.twilio.base.Creator;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import java.util.List;

import java.util.List;




/*
    * Twilio - Messaging
    *
    * This is the public Twilio REST API.
    *
    * API version: 1.33.0
    * Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


public class UsAppToPersonCreator extends Creator<UsAppToPerson>{
    private String messagingServiceSid;
    private String brandRegistrationSid;
    private String description;
    private List<String> messageSamples;
    private String usAppToPersonUsecase;
    private Boolean hasEmbeddedLinks;
    private Boolean hasEmbeddedPhone;

    public UsAppToPersonCreator(final String messagingServiceSid, final String brandRegistrationSid, final String description, final List<String> messageSamples, final String usAppToPersonUsecase, final Boolean hasEmbeddedLinks, final Boolean hasEmbeddedPhone) {
        this.messagingServiceSid = messagingServiceSid;
        this.brandRegistrationSid = brandRegistrationSid;
        this.description = description;
        this.messageSamples = messageSamples;
        this.usAppToPersonUsecase = usAppToPersonUsecase;
        this.hasEmbeddedLinks = hasEmbeddedLinks;
        this.hasEmbeddedPhone = hasEmbeddedPhone;
    }

    public UsAppToPersonCreator setBrandRegistrationSid(final String brandRegistrationSid){
        this.brandRegistrationSid = brandRegistrationSid;
        return this;
    }
    public UsAppToPersonCreator setDescription(final String description){
        this.description = description;
        return this;
    }
    public UsAppToPersonCreator setMessageSamples(final List<String> messageSamples){
        this.messageSamples = messageSamples;
        return this;
    }
    public UsAppToPersonCreator setUsAppToPersonUsecase(final String usAppToPersonUsecase){
        this.usAppToPersonUsecase = usAppToPersonUsecase;
        return this;
    }
    public UsAppToPersonCreator setHasEmbeddedLinks(final Boolean hasEmbeddedLinks){
        this.hasEmbeddedLinks = hasEmbeddedLinks;
        return this;
    }
    public UsAppToPersonCreator setHasEmbeddedPhone(final Boolean hasEmbeddedPhone){
        this.hasEmbeddedPhone = hasEmbeddedPhone;
        return this;
    }

    @Override
    public UsAppToPerson create(final TwilioRestClient client){
        String path = "/v1/Services/{MessagingServiceSid}/Compliance/Usa2p";

        path = path.replace("{"+"MessagingServiceSid"+"}", this.messagingServiceSid.toString());
        path = path.replace("{"+"BrandRegistrationSid"+"}", this.brandRegistrationSid.toString());
        path = path.replace("{"+"Description"+"}", this.description.toString());
        path = path.replace("{"+"MessageSamples"+"}", this.messageSamples.toString());
        path = path.replace("{"+"UsAppToPersonUsecase"+"}", this.usAppToPersonUsecase.toString());
        path = path.replace("{"+"HasEmbeddedLinks"+"}", this.hasEmbeddedLinks.toString());
        path = path.replace("{"+"HasEmbeddedPhone"+"}", this.hasEmbeddedPhone.toString());

        Request request = new Request(
            HttpMethod.POST,
            Domains.MESSAGING.toString(),
            path
        );
        addPostParams(request);
        Response response = client.request(request);
        if (response == null) {
            throw new ApiConnectionException("UsAppToPerson creation failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }
            throw new ApiException(restException);
        }

        return UsAppToPerson.fromJson(response.getStream(), client.getObjectMapper());
    }
    private void addPostParams(final Request request) {
        if (brandRegistrationSid != null) {
            request.addPostParam("BrandRegistrationSid", brandRegistrationSid);
    
        }
        if (description != null) {
            request.addPostParam("Description", description);
    
        }
        if (messageSamples != null) {
            for (String prop : messageSamples) {
                request.addPostParam("MessageSamples", prop);
            }
    
        }
        if (usAppToPersonUsecase != null) {
            request.addPostParam("UsAppToPersonUsecase", usAppToPersonUsecase);
    
        }
        if (hasEmbeddedLinks != null) {
            request.addPostParam("HasEmbeddedLinks", hasEmbeddedLinks.toString());
    
        }
        if (hasEmbeddedPhone != null) {
            request.addPostParam("HasEmbeddedPhone", hasEmbeddedPhone.toString());
    
        }
    }
}
