/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.rest.preview.trustedComms.brandedchannel;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.twilio.base.Resource;
import com.twilio.exception.ApiConnectionException;

import com.twilio.exception.ApiException;

import lombok.ToString;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;

import java.util.Objects;



@JsonIgnoreProperties(ignoreUnknown = true)
@ToString
public class Channel extends Resource {
    private static final long serialVersionUID = 87358995298118L;

    public static ChannelCreator creator(final String brandedChannelSid, final String phoneNumberSid){
        return new ChannelCreator(brandedChannelSid, phoneNumberSid);
    }





    /**
    * Converts a JSON String into a Channel object using the provided ObjectMapper.
    *
    * @param json Raw JSON String
    * @param objectMapper Jackson ObjectMapper
    * @return Channel object represented by the provided JSON
    */
    public static Channel fromJson(final String json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, Channel.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    /**
    * Converts a JSON InputStream into a Channel object using the provided
    * ObjectMapper.
    *
    * @param json Raw JSON InputStream
    * @param objectMapper Jackson ObjectMapper
    * @return Channel object represented by the provided JSON
    */
    public static Channel fromJson(final InputStream json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, Channel.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    private final String accountSid;
    private final String businessSid;
    private final String brandSid;
    private final String brandedChannelSid;
    private final String phoneNumberSid;
    private final String phoneNumber;
    private final URI url;

    @JsonCreator
    private Channel(
        @JsonProperty("account_sid")
        final String accountSid,

        @JsonProperty("business_sid")
        final String businessSid,

        @JsonProperty("brand_sid")
        final String brandSid,

        @JsonProperty("branded_channel_sid")
        final String brandedChannelSid,

        @JsonProperty("phone_number_sid")
        final String phoneNumberSid,

        @JsonProperty("phone_number")
        final String phoneNumber,

        @JsonProperty("url")
        final URI url
    ) {
        this.accountSid = accountSid;
        this.businessSid = businessSid;
        this.brandSid = brandSid;
        this.brandedChannelSid = brandedChannelSid;
        this.phoneNumberSid = phoneNumberSid;
        this.phoneNumber = phoneNumber;
        this.url = url;
    }

        public final String getAccountSid() {
            return this.accountSid;
        }
        public final String getBusinessSid() {
            return this.businessSid;
        }
        public final String getBrandSid() {
            return this.brandSid;
        }
        public final String getBrandedChannelSid() {
            return this.brandedChannelSid;
        }
        public final String getPhoneNumberSid() {
            return this.phoneNumberSid;
        }
        public final String getPhoneNumber() {
            return this.phoneNumber;
        }
        public final URI getUrl() {
            return this.url;
        }

    @Override
    public boolean equals(final Object o) {
        if (this==o) {
            return true;
        }

        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Channel other = (Channel) o;

        return Objects.equals(accountSid, other.accountSid) &&  Objects.equals(businessSid, other.businessSid) &&  Objects.equals(brandSid, other.brandSid) &&  Objects.equals(brandedChannelSid, other.brandedChannelSid) &&  Objects.equals(phoneNumberSid, other.phoneNumberSid) &&  Objects.equals(phoneNumber, other.phoneNumber) &&  Objects.equals(url, other.url)  ;
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountSid, businessSid, brandSid, brandedChannelSid, phoneNumberSid, phoneNumber, url);
    }

}

