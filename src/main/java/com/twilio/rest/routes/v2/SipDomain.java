/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.routes.v2;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.twilio.base.Resource;
import com.twilio.converter.DateConverter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import lombok.ToString;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.time.ZonedDateTime;
import java.util.Map;
import java.util.Objects;

@JsonIgnoreProperties(ignoreUnknown = true)
@ToString
public class SipDomain extends Resource {
    private static final long serialVersionUID = 232215828935411L;

    /**
     * Create a SipDomainCreator to execute create.
     *
     * @param pathSipDomain The sip_domain
     * @return SipDomainCreator capable of executing the create
     */
    public static SipDomainCreator creator(final String pathSipDomain) {
        return new SipDomainCreator(pathSipDomain);
    }

    /**
     * Create a SipDomainUpdater to execute update.
     *
     * @param pathSipDomain The sip_domain
     * @return SipDomainUpdater capable of executing the update
     */
    public static SipDomainUpdater updater(final String pathSipDomain) {
        return new SipDomainUpdater(pathSipDomain);
    }

    /**
     * Create a SipDomainFetcher to execute fetch.
     *
     * @param pathSipDomain The sip_domain
     * @return SipDomainFetcher capable of executing the fetch
     */
    public static SipDomainFetcher fetcher(final String pathSipDomain) {
        return new SipDomainFetcher(pathSipDomain);
    }

    /**
     * Converts a JSON String into a SipDomain object using the provided
     * ObjectMapper.
     *
     * @param json Raw JSON String
     * @param objectMapper Jackson ObjectMapper
     * @return SipDomain object represented by the provided JSON
     */
    public static SipDomain fromJson(final String json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, SipDomain.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    /**
     * Converts a JSON InputStream into a SipDomain object using the provided
     * ObjectMapper.
     *
     * @param json Raw JSON InputStream
     * @param objectMapper Jackson ObjectMapper
     * @return SipDomain object represented by the provided JSON
     */
    public static SipDomain fromJson(final InputStream json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, SipDomain.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    private final String sipDomain;
    private final URI url;
    private final String sid;
    private final String accountSid;
    private final String friendlyName;
    private final String voiceRegion;
    private final ZonedDateTime dateCreated;
    private final ZonedDateTime dateUpdated;

    @JsonCreator
    private SipDomain(@JsonProperty("sip_domain")
                      final String sipDomain,
                      @JsonProperty("url")
                      final URI url,
                      @JsonProperty("sid")
                      final String sid,
                      @JsonProperty("account_sid")
                      final String accountSid,
                      @JsonProperty("friendly_name")
                      final String friendlyName,
                      @JsonProperty("voice_region")
                      final String voiceRegion,
                      @JsonProperty("date_created")
                      final String dateCreated,
                      @JsonProperty("date_updated")
                      final String dateUpdated) {
        this.sipDomain = sipDomain;
        this.url = url;
        this.sid = sid;
        this.accountSid = accountSid;
        this.friendlyName = friendlyName;
        this.voiceRegion = voiceRegion;
        this.dateCreated = DateConverter.iso8601DateTimeFromString(dateCreated);
        this.dateUpdated = DateConverter.iso8601DateTimeFromString(dateUpdated);
    }

    /**
     * Returns The sip_domain.
     *
     * @return The sip_domain
     */
    public final String getSipDomain() {
        return this.sipDomain;
    }

    /**
     * Returns The url.
     *
     * @return The url
     */
    public final URI getUrl() {
        return this.url;
    }

    /**
     * Returns The sid.
     *
     * @return The sid
     */
    public final String getSid() {
        return this.sid;
    }

    /**
     * Returns The account_sid.
     *
     * @return The account_sid
     */
    public final String getAccountSid() {
        return this.accountSid;
    }

    /**
     * Returns The friendly_name.
     *
     * @return The friendly_name
     */
    public final String getFriendlyName() {
        return this.friendlyName;
    }

    /**
     * Returns The voice_region.
     *
     * @return The voice_region
     */
    public final String getVoiceRegion() {
        return this.voiceRegion;
    }

    /**
     * Returns The date_created.
     *
     * @return The date_created
     */
    public final ZonedDateTime getDateCreated() {
        return this.dateCreated;
    }

    /**
     * Returns The date_updated.
     *
     * @return The date_updated
     */
    public final ZonedDateTime getDateUpdated() {
        return this.dateUpdated;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }

        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        SipDomain other = (SipDomain) o;

        return Objects.equals(sipDomain, other.sipDomain) &&
               Objects.equals(url, other.url) &&
               Objects.equals(sid, other.sid) &&
               Objects.equals(accountSid, other.accountSid) &&
               Objects.equals(friendlyName, other.friendlyName) &&
               Objects.equals(voiceRegion, other.voiceRegion) &&
               Objects.equals(dateCreated, other.dateCreated) &&
               Objects.equals(dateUpdated, other.dateUpdated);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sipDomain,
                            url,
                            sid,
                            accountSid,
                            friendlyName,
                            voiceRegion,
                            dateCreated,
                            dateUpdated);
    }
}